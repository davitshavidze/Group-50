// 1) ახსენით რა არის props destructuring და რატომ არის უკეთესი props.title ის ნაცვლად პირდაპირ { title } გამოყენება.

// ეს არის props-ების პირდაპირი დესქტუქტურირება, რაც იმას ნიშნავს რომ შეგვიძლია ფუნქციის დეკლარაციისას ანუ შექმნისას პირდაპირ გადავხეთ props დესტრუქტურირებული ობიექტის სახით, არ მოგვიწევს ზედმეტი წვალება ობიექტის ანუ props-ის დაშლაში და ცვლადებში შენახვაში.


// 2) რა არის props children, რისთვის, როდის და როგორ ვიყენებთ მას? მოიყვანეთ მაგალითები(შექმენით რაიმე კომპონენტი თქვენი გემოვნებით)

// props children არის როდესაც კომპონენტის შექმნისას გარდა უშუალოდ კომპონენტშივე მისი შიგთავსისა შეგვძლია ავიღოთ და მივწვდეთ მის შიგთავსს გამოძახებისას, და დამატებიტად გადავცეთ ეგრე წოდებული children ელემენტები, რომელიც იქნება component მნიშვნელობის მშბლის dom-ში.


// 3) როდის ვიყენებთ ternary operator ს React ში და რა უპირატესობა აქვს მას ჩვეულებრივ if else თან შედარებით

// ternary operator არის ჩვეულებრივ if/else-სთან შედარებით მარტივი, დახვეწილი და კომპაქტური, გამოიყენება ბევრ ადგილში და გააჩნია ბევრი დანიშნულება.


// 4) რისთვის ვიყენებთ .map() ფუნქციას React ში

// .map() ფუნქცია react-ში გამოიყენება ობიექტებსა და სიებზე, მათში მყოფ მნიშვნელობებზე წვდომის მიღებასა და შემდეგ ზემოქმედებაში. წარმოადგენს for ციკლის ნათესავს xD 
